---
- hosts: localhost
  gather_facts: no
  
  vars_prompt           :
    - name              : cluster
      prompt            : Enter the NetApp cluster name
      default           : "stfx-dal0555"
      private           : no

  vars:
    node_name_series: [ 0, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z ]
    node_name_sequences: {a: 1, b: 2, c: 3, d: 4, e: 5, f: 6, g: 7, h: 8, i: 9, j: 10, k: 11, l: 12, m: 13, n: 14, o: 15, p: 16, q: 17, r: 18, s: 19, t: 20, u: 21, v: 22, w: 23, x: 24, y: 25, z: 26 }
    nodes_to_deploy: 2
    node1_name: cluster-1
    node2_name: cluster-2
    cluster_deploy_config:
      2:
       disks: 
          - {node: "{{ node1_name }}" }
          - {node: "{{ node2_name }}" }
    disks: "{{ cluster_deploy_config[nodes_to_deploy]['disks'] }}"
 # vars_prompt:
   # - name: netapp_hostname
   #   prompt: Enter the NetApp cluster name
   #   private: no
   # - name: netapp_username
   #   prompt: Enter the NetApp cluster account
   #   private: no
   # - name: netapp_password
   #   prompt: Enter the NetApp cluster password
   #   no_log: true
  tasks:
  

 # - debug: var=disks
      #msg: "{{ cluster_deploy_config[nodes_to_deploy]['disks'] }}" 
 # - pause:
  - name: Get Ontap facts
    na_ontap_info:
      state: info
      hostname: "stxf-dal0555"
      username: "admin"
      password: "Temp12345"
      https: true
      ontapi: 32
      validate_certs: false
      gather_subset:
        - "!volume_info"
        - "!lun_info"
    register: ontap_info

  - set_fact:
      ontap_facts: "{{ ontap_info.ontap_info }}"

  - set_fact:
      node_location: "{{ node_location |default([]) + [{ 'name': item, 'location': ontap_facts.system_node_info[item].node_location }] }}"
    with_items: "{{ ontap_facts.system_node_info }}"
  
  - set_fact:
      last_node: "{{ node_location|sort(attribute='name')|length }}"

  - pause:
      prompt: "Enter number of new nodes for Expansion "
    register: reg_numofnodes

  - set_fact:
      num_of_new_nodes: 2
    when:   reg_numofnodes.user_input == "" 

  - fail: 
       msg: "Exapnsion not possible for ODD numbers... Existing.. "
    when: reg_numofnodes.user_input |int is not divisibleby 2
  - fail:
      msg: "Expansion allow by 2 node or 4 node"
    when: reg_numofnodes.user_input |int > 4
  
  - set_fact:
      num_of_new_nodes: "{{ reg_numofnodes.user_input |int }}"
    when:   reg_numofnodes.user_input != ""

  - name: Count total number of nodes in the cluster
    set_fact: 
      total_count: "{{ num_of_new_nodes|int + last_node|int }}"
 
    
  - name: set short name
    set_fact:
      envshort: "{{ cluster[0:4] | lower }}"

  - name: Refused if total cluster node count exceeds 22 - FAIL
    fail:
      msg: 
        - "Total node count exceed to 22"
        - "cluster expansion not possible for {{ envshort }}.. exiting" 
    when:  total_count|int > 22
  
  - name: Total node count for an {{ envshort }} exceeds 8 - FAIL
    fail:
      msg: 
        - "Total node count exceed to 8"
        - "cluster expansion not possible for {{ envshort }}.. exiting" 
    when: 
      - envshort == "stbf" or envshort == "stxf"
      - total_count|int > 8

  - set_fact:
      nodesequence: "{{ nodesequence|default([]) + [ node_name_series[item|int] ] }}"
    with_sequence: start="{{last_node|int+1}}" end="{{last_node|int + num_of_new_nodes|int }}"
 
  - name: expansion cluster node set
    set_fact:
      expansion_node: "{{ nodesequence | join() }}"
  
  - debug: var=expansion_node

  - set_fact:
        clustervarfile: "{{ playbook_dir + '/ansible-data/varfiles/' + cluster + '/var_' + cluster + '_' + expansion_node  + '.yml' }}"

  - debug: var=clustervarfile


