---
  - name: Peer Ontap Cluster
    hosts: localhost
    gather_facts: no
    
    vars_prompt:
      - name: netapp_source_cluster
        prompt: "Source Cluster to Peer "
        private: no
    
      - name: netapp_username
        prompt: "Username "
        private: no
    
      - name: netapp_password
        prompt: "Password "

    vars:
      # First load the regions from whichever file you need
      regions: "{{ lookup('file', 'regions.yml') | from_yaml }}"
      peers: "{{ query('sl_region_peers', regions=regions, hostname=netapp_source_cluster) }}"
      
      #netapp_dest_cluster:
      #  - 192.168.2.136
      #  - 192.168.2.141
      
      input: &input
        hostname: "{{ netapp_source_cluster }}"
        username: "{{ netapp_username }}"
        password: "{{ netapp_password }}"
    
    tasks:
    - debug: var=regions
    - pause:
    - name: Show peer clusters for "{{ netapp_source_cluster }}"
      set_fact:
        netapp_dest_cluster: "{{ query('sl_region_peers', regions=regions, hostname=netapp_source_cluster) }}"
    
    - debug: var=netapp_dest_cluster
    - pause:

    - name: Gathering Intercluster LIFs on Source cluster - "{{ netapp_source_cluster }}"
      na_ontap_info:
        state: info
        hostname: "{{ netapp_source_cluster }}"
        username: "{{ netapp_username }}"
        password: "{{ netapp_password }}"
        gather_subset:
          - net_interface_info
        https: true
        validate_certs: false
      register: ontap_interface_info
    
    - set_fact:
        src_ontap_facts: "{{ ontap_interface_info.ontap_info }}"

    - set_fact:
        source_ic_ips: "{{ source_ic_ips |default([]) + [ src_ontap_facts.net_interface_info[item].address ] }}"
      with_items: '{{ src_ontap_facts.net_interface_info }}'
      when: src_ontap_facts.net_interface_info[item].role == 'intercluster'
           
    - include_role:
        name: cluster_peer_creation
      vars:
        <<: *input
      loop: "{{ netapp_dest_cluster }}"
      
      